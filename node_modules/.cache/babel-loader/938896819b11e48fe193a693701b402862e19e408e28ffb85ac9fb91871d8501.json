{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\hackathon2\\\\beautyhackxs\\\\src\\\\components\\\\Ingredients.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ingredients() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [chatMessage, setChatMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [scannerActive, setScannerActive] = useState(false);\n  const [scanResult, setScanResult] = useState('');\n  const scannerRef = useRef(null);\n  useEffect(() => {\n    // Clean up scanner on component unmount\n    return () => {\n      if (scannerRef.current) {\n        try {\n          scannerRef.current.clear();\n        } catch (err) {\n          console.error(\"Failed to clear scanner\", err);\n        }\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Initialize scanner when scannerActive is true\n    if (scannerActive) {\n      // First make sure any existing scanner is cleared\n      if (scannerRef.current) {\n        try {\n          scannerRef.current.clear();\n          scannerRef.current = null;\n        } catch (err) {\n          console.error(\"Failed to clear previous scanner\", err);\n        }\n      }\n\n      // Create a new scanner with better config\n      const scanner = new Html5QrcodeScanner(\"reader\", {\n        fps: 10,\n        qrbox: {\n          width: 250,\n          height: 250\n        },\n        rememberLastUsedCamera: true,\n        showTorchButtonIfSupported: true,\n        aspectRatio: 1.0\n      });\n\n      // Success callback\n      const onScanSuccess = (decodedText, decodedResult) => {\n        console.log(`Code scanned: ${decodedText}`, decodedResult);\n        setScanResult(decodedText);\n\n        // Analyze the scanned barcode\n        handleBarcodeAnalysis(decodedText);\n\n        // Deactivate scanner after successful scan\n        setScannerActive(false);\n      };\n\n      // Error callback (just log errors, don't handle them)\n      const onScanFailure = error => {\n        // Don't log frequent scan failures to avoid console spam\n        if (error !== \"No QR code found.\") {\n          console.warn(`Code scan error: ${error}`);\n        }\n      };\n\n      // Render scanner with callbacks\n      scanner.render(onScanSuccess, onScanFailure);\n\n      // Store scanner reference\n      scannerRef.current = scanner;\n    } else {\n      // Clean up scanner when scannerActive becomes false\n      if (scannerRef.current) {\n        try {\n          scannerRef.current.clear();\n          scannerRef.current = null;\n        } catch (err) {\n          console.error(\"Failed to clear scanner\", err);\n        }\n      }\n    }\n  }, [scannerActive]);\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setSelectedImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleAnalyzeImage = () => {\n    if (!selectedImage) return;\n    setIsAnalyzing(true);\n    setTimeout(() => {\n      setAnalysisResults({\n        message: \"Analysis complete! In the future, this will identify ingredients from your product label.\"\n      });\n      setIsAnalyzing(false);\n    }, 2000);\n  };\n  const handleBarcodeAnalysis = barcode => {\n    setIsAnalyzing(true);\n\n    // Add a more visible scan success message immediately\n    setScanResult(`Successfully scanned barcode: ${barcode}`);\n\n    // Simulate AI processing with the barcode\n    setTimeout(() => {\n      setAnalysisResults({\n        message: `Analysis complete for barcode: ${barcode}. \n        \nProduct Name: SkinCare Hydrating Moisturizer\n        \nMain Ingredients: Water, Glycerin, Cetearyl Alcohol, Caprylic/Capric Triglyceride, Ceteareth-20, Butyrospermum Parkii (Shea) Butter, Dimethicone, Phenoxyethanol, Tocopheryl Acetate, Parfum.\n\nPotentially Harmful Ingredients:\n• Phenoxyethanol - May cause allergic reactions in sensitive individuals. Risk: Low to Moderate\n• Parfum (Fragrance) - Can cause irritation and allergic reactions. Risk: Moderate`\n      });\n      setIsAnalyzing(false);\n\n      // Add this as a message in the chat\n      const aiResponse = {\n        sender: 'ai',\n        text: `I found information about product with barcode: ${barcode}.\n\nProduct Name: SkinCare Hydrating Moisturizer\n\nThis product contains two potentially concerning ingredients:\n1. Phenoxyethanol - A preservative that may cause skin irritation in some people\n2. Parfum (Fragrance) - Can trigger allergic reactions or sensitivity\n\nWould you like more specific information about these ingredients?`\n      };\n      setChatHistory(prev => [...prev, aiResponse]);\n    }, 2000);\n  };\n  const handleClearImage = () => {\n    setSelectedImage(null);\n    setImagePreview(null);\n    setAnalysisResults(null);\n  };\n  const toggleScanner = () => {\n    setScannerActive(!scannerActive);\n    setScanResult('');\n    if (scannerActive) {\n      setAnalysisResults(null);\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!chatMessage.trim()) return;\n\n    // Add user message to chat history\n    const userMessage = {\n      sender: 'user',\n      text: chatMessage\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n\n    // Simulate AI processing\n    setIsProcessing(true);\n\n    // Simulate AI response (in a real implementation, this would call Gemini API)\n    setTimeout(() => {\n      const aiResponse = {\n        sender: 'ai',\n        text: `Regarding your question about \"${chatMessage}\": In a real implementation, Gemini AI would provide detailed information about these ingredients, their benefits, potential risks, and suitable alternatives.`\n      };\n      setChatHistory(prev => [...prev, aiResponse]);\n      setChatMessage('');\n      setIsProcessing(false);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"ingredients-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingredient Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload a product image to check what's in your beauty products or ask questions about ingredients.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload a Product Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Take a photo of your product's ingredient list and we'll analyze it for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: !imagePreview && !scannerActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image-upload\",\n              className: \"upload-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"48\",\n                  height: \"48\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"17 8 12 3 7 8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"3\",\n                    x2: \"12\",\n                    y2: \"15\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click to upload an image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image-upload\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-option\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"scanner-btn\",\n              onClick: toggleScanner,\n              children: \"Scan Barcode/QR Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this) : scannerActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"reader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), scanResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-success\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scan-success-icon\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"scan-result\",\n              children: scanResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn\",\n            onClick: toggleScanner,\n            children: scanResult ? 'Go Back' : 'Cancel Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imagePreview,\n            alt: \"Preview\",\n            className: \"image-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"analyze-btn\",\n              onClick: handleAnalyzeImage,\n              disabled: isAnalyzing,\n              children: isAnalyzing ? 'Analyzing...' : 'Analyze Ingredients'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-btn\",\n              onClick: handleClearImage,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), analysisResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: analysisResults.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gemini-chatbox ingredients-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ask Questions About Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"powered-by\",\n        children: \"Powered by Gemini AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [chatHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chat-placeholder\",\n          children: \"Your conversation will appear here. Ask questions about beauty ingredients!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this) : chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message ai processing\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: \"Gemini is analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask about ingredients or products...\",\n          value: chatMessage,\n          onChange: e => setChatMessage(e.target.value),\n          disabled: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          disabled: !chatMessage.trim() || isProcessing,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"22\",\n              y1: \"2\",\n              x2: \"11\",\n              y2: \"13\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"22 2 15 22 11 13 2 9 22 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(Ingredients, \"YdBDGzxNyPeEu44NX7OBJpmEHTQ=\");\n_c = Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["useState","useEffect","useRef","Html5QrcodeScanner","jsxDEV","_jsxDEV","Ingredients","_s","selectedImage","setSelectedImage","imagePreview","setImagePreview","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","chatMessage","setChatMessage","chatHistory","setChatHistory","isProcessing","setIsProcessing","scannerActive","setScannerActive","scanResult","setScanResult","scannerRef","current","clear","err","console","error","scanner","fps","qrbox","width","height","rememberLastUsedCamera","showTorchButtonIfSupported","aspectRatio","onScanSuccess","decodedText","decodedResult","log","handleBarcodeAnalysis","onScanFailure","warn","render","handleImageChange","e","target","files","file","reader","FileReader","onloadend","result","readAsDataURL","handleAnalyzeImage","setTimeout","message","barcode","aiResponse","sender","text","prev","handleClearImage","toggleScanner","handleSendMessage","preventDefault","trim","userMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","type","id","accept","onChange","style","display","onClick","src","alt","disabled","length","map","msg","index","onSubmit","placeholder","value","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/hackathon2/beautyhackxs/src/components/Ingredients.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\n\r\nexport default function Ingredients() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analysisResults, setAnalysisResults] = useState(null);\r\n  const [chatMessage, setChatMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [scannerActive, setScannerActive] = useState(false);\r\n  const [scanResult, setScanResult] = useState('');\r\n  const scannerRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Clean up scanner on component unmount\r\n    return () => {\r\n      if (scannerRef.current) {\r\n        try {\r\n          scannerRef.current.clear();\r\n        } catch (err) {\r\n          console.error(\"Failed to clear scanner\", err);\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    // Initialize scanner when scannerActive is true\r\n    if (scannerActive) {\r\n      // First make sure any existing scanner is cleared\r\n      if (scannerRef.current) {\r\n        try {\r\n          scannerRef.current.clear();\r\n          scannerRef.current = null;\r\n        } catch (err) {\r\n          console.error(\"Failed to clear previous scanner\", err);\r\n        }\r\n      }\r\n\r\n      // Create a new scanner with better config\r\n      const scanner = new Html5QrcodeScanner(\"reader\", {\r\n        fps: 10,\r\n        qrbox: { width: 250, height: 250 },\r\n        rememberLastUsedCamera: true,\r\n        showTorchButtonIfSupported: true,\r\n        aspectRatio: 1.0\r\n      });\r\n\r\n      // Success callback\r\n      const onScanSuccess = (decodedText, decodedResult) => {\r\n        console.log(`Code scanned: ${decodedText}`, decodedResult);\r\n        setScanResult(decodedText);\r\n        \r\n        // Analyze the scanned barcode\r\n        handleBarcodeAnalysis(decodedText);\r\n        \r\n        // Deactivate scanner after successful scan\r\n        setScannerActive(false);\r\n      };\r\n\r\n      // Error callback (just log errors, don't handle them)\r\n      const onScanFailure = (error) => {\r\n        // Don't log frequent scan failures to avoid console spam\r\n        if (error !== \"No QR code found.\") {\r\n          console.warn(`Code scan error: ${error}`);\r\n        }\r\n      };\r\n\r\n      // Render scanner with callbacks\r\n      scanner.render(onScanSuccess, onScanFailure);\r\n      \r\n      // Store scanner reference\r\n      scannerRef.current = scanner;\r\n    } else {\r\n      // Clean up scanner when scannerActive becomes false\r\n      if (scannerRef.current) {\r\n        try {\r\n          scannerRef.current.clear();\r\n          scannerRef.current = null;\r\n        } catch (err) {\r\n          console.error(\"Failed to clear scanner\", err);\r\n        }\r\n      }\r\n    }\r\n  }, [scannerActive]);\r\n  \r\n  const handleImageChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      setSelectedImage(file);\r\n      \r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  const handleAnalyzeImage = () => {\r\n    if (!selectedImage) return;\r\n    \r\n    setIsAnalyzing(true);\r\n    \r\n    setTimeout(() => {\r\n      setAnalysisResults({\r\n        message: \"Analysis complete! In the future, this will identify ingredients from your product label.\"\r\n      });\r\n      setIsAnalyzing(false);\r\n    }, 2000);\r\n  };\r\n  \r\n  const handleBarcodeAnalysis = (barcode) => {\r\n    setIsAnalyzing(true);\r\n    \r\n    // Add a more visible scan success message immediately\r\n    setScanResult(`Successfully scanned barcode: ${barcode}`);\r\n    \r\n    // Simulate AI processing with the barcode\r\n    setTimeout(() => {\r\n      setAnalysisResults({\r\n        message: `Analysis complete for barcode: ${barcode}. \r\n        \r\nProduct Name: SkinCare Hydrating Moisturizer\r\n        \r\nMain Ingredients: Water, Glycerin, Cetearyl Alcohol, Caprylic/Capric Triglyceride, Ceteareth-20, Butyrospermum Parkii (Shea) Butter, Dimethicone, Phenoxyethanol, Tocopheryl Acetate, Parfum.\r\n\r\nPotentially Harmful Ingredients:\r\n• Phenoxyethanol - May cause allergic reactions in sensitive individuals. Risk: Low to Moderate\r\n• Parfum (Fragrance) - Can cause irritation and allergic reactions. Risk: Moderate`\r\n      });\r\n      setIsAnalyzing(false);\r\n      \r\n      // Add this as a message in the chat\r\n      const aiResponse = { \r\n        sender: 'ai', \r\n        text: `I found information about product with barcode: ${barcode}.\r\n\r\nProduct Name: SkinCare Hydrating Moisturizer\r\n\r\nThis product contains two potentially concerning ingredients:\r\n1. Phenoxyethanol - A preservative that may cause skin irritation in some people\r\n2. Parfum (Fragrance) - Can trigger allergic reactions or sensitivity\r\n\r\nWould you like more specific information about these ingredients?` \r\n      };\r\n      setChatHistory(prev => [...prev, aiResponse]);\r\n    }, 2000);\r\n  };\r\n  \r\n  const handleClearImage = () => {\r\n    setSelectedImage(null);\r\n    setImagePreview(null);\r\n    setAnalysisResults(null);\r\n  };\r\n  \r\n  const toggleScanner = () => {\r\n    setScannerActive(!scannerActive);\r\n    setScanResult('');\r\n    if (scannerActive) {\r\n      setAnalysisResults(null);\r\n    }\r\n  };\r\n  \r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!chatMessage.trim()) return;\r\n    \r\n    // Add user message to chat history\r\n    const userMessage = { sender: 'user', text: chatMessage };\r\n    setChatHistory(prev => [...prev, userMessage]);\r\n    \r\n    // Simulate AI processing\r\n    setIsProcessing(true);\r\n    \r\n    // Simulate AI response (in a real implementation, this would call Gemini API)\r\n    setTimeout(() => {\r\n      const aiResponse = { \r\n        sender: 'ai', \r\n        text: `Regarding your question about \"${chatMessage}\": In a real implementation, Gemini AI would provide detailed information about these ingredients, their benefits, potential risks, and suitable alternatives.` \r\n      };\r\n      setChatHistory(prev => [...prev, aiResponse]);\r\n      setChatMessage('');\r\n      setIsProcessing(false);\r\n    }, 1500);\r\n  };\r\n  \r\n  return (\r\n    <section className=\"ingredients-container\">\r\n      <h1>Ingredient Checker</h1>\r\n      <p>Upload a product image to check what's in your beauty products or ask questions about ingredients.</p>\r\n      \r\n      <div className=\"upload-section\">\r\n        <h2>Upload a Product Image</h2>\r\n        <p>Take a photo of your product's ingredient list and we'll analyze it for you.</p>\r\n        \r\n        <div className=\"upload-container\">\r\n          {!imagePreview && !scannerActive ? (\r\n            <div className=\"upload-options\">\r\n              <div className=\"upload-box\">\r\n                <label htmlFor=\"image-upload\" className=\"upload-label\">\r\n                  <div className=\"upload-icon\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n                      <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n                      <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n                    </svg>\r\n                  </div>\r\n                  <p>Click to upload an image</p>\r\n                </label>\r\n                <input \r\n                  type=\"file\" \r\n                  id=\"image-upload\" \r\n                  accept=\"image/*\" \r\n                  onChange={handleImageChange} \r\n                  style={{ display: 'none' }}\r\n                />\r\n              </div>\r\n              <div className=\"scan-option\">\r\n                <button className=\"scanner-btn\" onClick={toggleScanner}>\r\n                  Scan Barcode/QR Code\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : scannerActive ? (\r\n            <div className=\"scanner-container\">\r\n              <div id=\"reader\"></div>\r\n              {scanResult && (\r\n                <div className=\"scan-success\">\r\n                  <div className=\"scan-success-icon\">✓</div>\r\n                  <p className=\"scan-result\">{scanResult}</p>\r\n                </div>\r\n              )}\r\n              <button className=\"clear-btn\" onClick={toggleScanner}>\r\n                {scanResult ? 'Go Back' : 'Cancel Scan'}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"image-preview-container\">\r\n              <img src={imagePreview} alt=\"Preview\" className=\"image-preview\" />\r\n              <div className=\"preview-actions\">\r\n                <button \r\n                  className=\"analyze-btn\" \r\n                  onClick={handleAnalyzeImage}\r\n                  disabled={isAnalyzing}\r\n                >\r\n                  {isAnalyzing ? 'Analyzing...' : 'Analyze Ingredients'}\r\n                </button>\r\n                <button className=\"clear-btn\" onClick={handleClearImage}>\r\n                  Clear\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {analysisResults && (\r\n          <div className=\"analysis-results\">\r\n            <h3>Analysis Results</h3>\r\n            <p>{analysisResults.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Text-based Chatbox */}\r\n      <div className=\"gemini-chatbox ingredients-chat\">\r\n        <h3>Ask Questions About Ingredients</h3>\r\n        <p className=\"powered-by\">Powered by Gemini AI</p>\r\n        \r\n        <div className=\"chat-messages\">\r\n          {chatHistory.length === 0 ? (\r\n            <p className=\"chat-placeholder\">Your conversation will appear here. Ask questions about beauty ingredients!</p>\r\n          ) : (\r\n            chatHistory.map((msg, index) => (\r\n              <div key={index} className={`chat-message ${msg.sender}`}>\r\n                <span className=\"message-text\">{msg.text}</span>\r\n              </div>\r\n            ))\r\n          )}\r\n          {isProcessing && (\r\n            <div className=\"chat-message ai processing\">\r\n              <span className=\"message-text\">Gemini is analyzing...</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <form className=\"chat-input\" onSubmit={handleSendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Ask about ingredients or products...\"\r\n            value={chatMessage}\r\n            onChange={(e) => setChatMessage(e.target.value)}\r\n            disabled={isProcessing}\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            className=\"send-btn\"\r\n            disabled={!chatMessage.trim() || isProcessing}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n              <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n            </svg>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}